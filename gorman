# for each WORD in the dataset, we get the CONTEXT from the CMU
# Identify word and vowel
# Look at vowel context

import nltk; import codecs; import os; import re; import numpy; from collections import defaultdict
from nltk.corpus import cmudict

os.chdir("G:\\miscprojects\\canada")

#Gorman's dictionaries

PPE_CODE = {'M': 'lab', 'P': 'lab', 'B': 'lab', 'F': 'lab', 'V': 'lab',
            'S':  'cor', 'T': 'cor', 'D':  'cor', 'CH': 'cor', 
            'JH': 'cor', 'N': 'cor', 'R': 'liq', 'L': 'liq',
            'Y': 'gld', 'W': 'gld', 'K': 'vel', 'G': 'vel', 'HH': 'glt', 'TH':"unknown", 'AH0':'unkown'}
FPE_CODE = {'F': 'vlf', 'TH': 'vlf', 'S': 'vlf', 'SH': 'vlf', 'HH': 'vlf',
            'V': 'vdf', 'DH': 'vdf', 'Z': 'vdf', 'ZH': 'vdf',
            'M': 'nas', 'N': 'nas', 'NG': 'nas',
            'P': 'vls', 'T': 'vls', 'K': 'vls',
            'B': 'vds', 'D': 'vds', 'G': 'vds',
            'R': 'liq', 'L': 'liq',
            'Y': 'gld', 'W': 'gld', 'CH':"unknown",}

def cmureader(filename):
    output=defaultdict(list)
    #this counter just for testing purposes
    count=0
    #getting the dictionary from NLTK
    cmudict=nltk.corpus.cmudict.dict()
    #read in the spreadsheet
    f=codecs.open(filename, "r", "utf-8"); spreadsheet=[]
    for line in f:
        spreadsheet.append(line.rstrip("\r").split(","))
    print len(spreadsheet)
    print spreadsheet[1]
    #process line by line, where each item in the list is a line
    for entry in spreadsheet[1:len(spreadsheet)]:
        #the cmu is lowercase; we need to get rid of all the numbers on the words
        word=re.sub("[^a-z]","", entry[5].lower())
        try:
            #if several entries, we just take the first one
            #none of the words has secondary stress
            transcription=cmudict[word][0]
            #find the primestressvowel and the two sounds next to it
            indexi=vowelfinder(transcription)
            context=[transcription[i] for i in indexi if i < len(transcription)]
            #we look the context up in Gorman's dictionaries
            precede=PPE_CODE[transcription[indexi[0]]]
            #for the following vowel, we need to deal with word-final vowels
            if len(context) > 2:
                #print transcription[indexi[len(indexi)-1]]
                follow= FPE_CODE[transcription[indexi[len(indexi)-1]]]
            else:
                follow="NONE"
        except:
            print transcription
            print word
            print "error"
            break
        output[int(entry[0])]=[entry, transcription, [i for i in context], precede, follow]
        #print output
    #print len(output)
    #print output[2]
    return output
    

#cmudict["bed"]
#[[u'B', u'EH1', u'D']]

def vowelfinder(transcription):
    #these are the vowels in the CMU dictionary
    vowels=["AA", "AH", "AW", "EH", "EY", "IH", "OW", "UH", "AE", "AO", "AY", "ER", "IY", "OY", "UW"]
    #this makes a list of primary stress vowels based on the vowels list above
    primestressvowels=[str(i+"1") for i in vowels]
    for sound in transcription:
        if sound in primestressvowels:
            #print sound
            return [transcription.index(sound)-1, transcription.index(sound), transcription.index(sound)+1]


        
def spreadsheetwriter(dicti, filename):
    sorteddicti=dict(sorted(dicti.items()))
    f=codecs.open(filename+".txt", "w")
     #writing to file
    for item in sorteddicti:
        #print sorteddicti[item][2]
        f.write (str(item)+","+",".join(sorteddicti[item][0])+","+" ".join(sorteddicti[item][1])+","+",".join(sorteddicti[item][2])+","+sorteddicti[item][3]+","+sorteddicti[item][4]+"\n")
    f.close()


t=cmureader("canada_outliers_817.csv")
#print t[2][2]
spreadsheetwriter(t, "test_93")

